{"remainingRequest":"/home/PMADMIN/pmmBlogUpdate/node_modules/babel-loader/lib/index.js!/home/PMADMIN/pmmBlogUpdate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/PMADMIN/pmmBlogUpdate/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/PMADMIN/pmmBlogUpdate/src/components/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/PMADMIN/pmmBlogUpdate/src/components/PostList.vue","mtime":1636253091889},{"path":"/home/PMADMIN/pmmBlogUpdate/node_modules/cache-loader/dist/cjs.js","mtime":1636245435058},{"path":"/home/PMADMIN/pmmBlogUpdate/node_modules/babel-loader/lib/index.js","mtime":1636245433394},{"path":"/home/PMADMIN/pmmBlogUpdate/node_modules/cache-loader/dist/cjs.js","mtime":1636245435058},{"path":"/home/PMADMIN/pmmBlogUpdate/node_modules/vue-loader/lib/index.js","mtime":1636245470743}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvc3REYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9Qb3N0RGF0YVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInBvc3RzLWxpc3QiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICAgIGN1cnJlbnRQb3N0OiB7fSwKICAgICAgY3VycmVudEluZGV4OiAtMSwKICAgICAgdGl0bGU6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmV0cmlldmVQb3N0czogZnVuY3Rpb24gcmV0cmlldmVQb3N0cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIFBvc3REYXRhU2VydmljZS5nZXRBbGwoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLnBvc3RzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVmcmVzaExpc3Q6IGZ1bmN0aW9uIHJlZnJlc2hMaXN0KCkgewogICAgICB0aGlzLnJldHJpZXZlUG9zdHMoKTsKICAgICAgdGhpcy5jdXJyZW50UG9zdCA9IG51bGw7CiAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gLTE7CiAgICB9LAogICAgc2V0QWN0aXZlUG9zdDogZnVuY3Rpb24gc2V0QWN0aXZlUG9zdChwb3N0LCBpbmRleCkgewogICAgICB0aGlzLmN1cnJlbnRQb3N0ID0gcG9zdDsKICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSBpbmRleDsKICAgIH0sCiAgICByZW1vdmVBbGxQb3N0czogZnVuY3Rpb24gcmVtb3ZlQWxsUG9zdHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgUG9zdERhdGFTZXJ2aWNlLmRlbGV0ZUFsbCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CgogICAgICAgIF90aGlzMi5yZWZyZXNoTGlzdCgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICBzZWFyY2hUaXRsZTogZnVuY3Rpb24gc2VhcmNoVGl0bGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgUG9zdERhdGFTZXJ2aWNlLmZpbmRCeVRpdGxlKHRoaXMudGl0bGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMzLnBvc3RzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXRyaWV2ZVBvc3RzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA,OAAA,eAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,CAAA,CAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,eAAA,CAAA,MAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA,KAVA;AAYA,IAAA,WAZA,yBAYA;AACA,WAAA,aAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,CAAA,CAAA;AACA,KAhBA;AAkBA,IAAA,aAlBA,yBAkBA,IAlBA,EAkBA,KAlBA,EAkBA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KArBA;AAuBA,IAAA,cAvBA,4BAuBA;AAAA;;AACA,MAAA,eAAA,CAAA,SAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,WAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA,KAhCA;AAkCA,IAAA,WAlCA,yBAkCA;AAAA;;AACA,MAAA,eAAA,CAAA,WAAA,CAAA,KAAA,KAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA;AA3CA,GAVA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,aAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\n  <div class=\"list row\">\n      <div class=\"col-md-8\">\n          <div class=\"input-group mb-3\">\n              <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Search by title\"\n              v-model=\"title\"\n              />\n              <div class=\"input-group-append\">\n                  <button\n                  class=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  @click=\"searchTitle\"\n                  >\n                  Search\n                  </button>\n              </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n            <h4>Posts List</h4>\n            <ul class=\"list-group\">\n                <li\n                class=\"list-group-item\"\n                :class=\"{ active: index == currentIndex }\"\n                v-for=\"(post, index) in posts\"\n                :key=\"index\"\n                @click=\"setActivePost(post, index)\"\n                >\n                {{ post.title }}\n                </li>\n            </ul>\n            <button class=\"m-3 btn btn-sm btn-danger\" @click=\"removeAllPosts\">\n                Remove All\n            </button>\n        </div>\n        <div class=\"col-md-6\">\n            <div v-if=\"currentPost.id\">\n                <h4>Post</h4>\n            <div>\n          <label><strong>Title:</strong></label> {{ currentPost.title }}\n        </div>\n        <div>\n          <label><strong>Date:</strong></label>\n          {{ currentPost.date }}\n        </div>\n        <div>\n          <label><strong>Content:</strong></label>\n          {{ currentPost.Content }}\n        </div>\n        <div>\n          <label><strong>Link:</strong></label>\n          {{ currentPost.Link }}\n        </div>\n        <div>\n          <label><strong>Image:</strong></label>\n          {{ currentPost.Image }}\n        </div>\n\n        <a\n        class=\"badge badge-warning\"\n        :href=\"'/posts/' + currentPost.id\"\n        >\n        Edit\n        </a>\n            </div>\n            <div v-else>\n                <br />\n                <p>Please Click on a Post...</p>\n            </div>\n        </div>\n  </div>\n</template>\n\n<script >\nimport PostDataService from \"../services/PostDataService\";\n\nexport default {\n    name: \"posts-list\",\n    data() {\n        return {\n            posts: [],\n            currentPost: {},\n            currentIndex: -1,\n            title: \"\"\n        };\n    },\n    methods: {\n        retrievePosts() {\n            PostDataService.getAll()\n            .then(response => {\n                this.posts = response.data;\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        },\n\n        refreshList() {\n            this.retrievePosts();\n            this.currentPost = null;\n            this.currentIndex = -1;\n        },\n\n        setActivePost(post, index) {\n            this.currentPost = post;\n            this.currentIndex = index;\n        },\n\n        removeAllPosts() {\n            PostDataService.deleteAll()\n            .then(response => {\n                console.log(response.data);\n                this.refreshList();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        },\n\n        searchTitle() {\n            PostDataService.findByTitle(this.title)\n            .then(response => {\n                this.posts = response.data;\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        }\n    },\n    mounted() {\n        this.retrievePosts();\n    }\n};\n</script>\n\n<style>\n\n.list {\n  text-align: left;\n  max-width: 750px;\n  margin: auto;\n}\nimg {\n    max-width: 155px;\n    max-height: 155px;\n}\n\n</style>"],"sourceRoot":"src/components"}]}