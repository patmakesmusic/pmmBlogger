{"remainingRequest":"/home/PMADMIN/vueBlogUpdate/node_modules/babel-loader/lib/index.js!/home/PMADMIN/vueBlogUpdate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/PMADMIN/vueBlogUpdate/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/PMADMIN/vueBlogUpdate/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/PMADMIN/vueBlogUpdate/src/components/Post.vue","mtime":1636248195359},{"path":"/home/PMADMIN/vueBlogUpdate/node_modules/cache-loader/dist/cjs.js","mtime":1636245435058},{"path":"/home/PMADMIN/vueBlogUpdate/node_modules/babel-loader/lib/index.js","mtime":1636245433394},{"path":"/home/PMADMIN/vueBlogUpdate/node_modules/cache-loader/dist/cjs.js","mtime":1636245435058},{"path":"/home/PMADMIN/vueBlogUpdate/node_modules/vue-loader/lib/index.js","mtime":1636245470743}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvc3REYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9Qb3N0RGF0YVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInBvc3RzIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFBvc3Q6IG51bGwsCiAgICAgIG1lc3NhZ2U6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdDogZnVuY3Rpb24gZ2V0UG9zdChpZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgUG9zdERhdGFTZXJ2aWNlLmdldChpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5jdXJyZW50UG9zdCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZVBvc3Q6IGZ1bmN0aW9uIHVwZGF0ZVBvc3QoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgUG9zdERhdGFTZXJ2aWNlLnVwZGF0ZSh0aGlzLmN1cnJlbnRQb3N0LmlkLCB0aGlzLmN1cnJlbnRQb3N0KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIF90aGlzMi5tZXNzYWdlID0gJ1RoZSBwb3N0IHdhcyB1cGRhdGVkIHN1Y2Nlc3NmdWxseSEnOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVQb3N0OiBmdW5jdGlvbiBkZWxldGVQb3N0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIFBvc3REYXRhU2VydmljZS5kZWxldGUodGhpcy5jdXJyZW50UG9zdC5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKCiAgICAgICAgX3RoaXMzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAicG9zdHMiCiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMubWVzc2FnZSA9ICcnOwogICAgdGhpcy5nZXRQb3N0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgfQp9Ow=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,OAAA,eAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,EADA,EACA;AAAA;;AACA,MAAA,eAAA,CAAA,GAAA,CAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA,KAVA;AAYA,IAAA,UAZA,wBAYA;AAAA;;AACA,MAAA,eAAA,CAAA,MAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EAAA,KAAA,WAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,oCAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA,KArBA;AAsBA,IAAA,UAtBA,wBAsBA;AAAA;;AACA,MAAA,eAAA,CAAA,MAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA;AA/BA,GARA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,OAAA,GAAA,EAAA;AACA,SAAA,OAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AA5CA,CAAA","sourcesContent":["<template>\n  <div v-if=\"currentPost\" class=\"edit-form\">\n      <h4>Post</h4>\n      <form>\n          <div class=\"form-group\">\n              <label for=\"title\">Title</label>\n              <input type=\"text\" class=\"form-control\" id=\"title\"\n              v-model=\"currentPost.title\"\n              />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"date\">Date</label>\n              <input type=\"text\" class=\"form-control\" id=\"date\"\n              v-model=\"currentPost.date\"\n              />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"content\">Content</label>\n              <input type=\"text\" class=\"form-control\" id=\"Content\"\n              v-model=\"currentPost.Content\"\n              />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"link\">Link</label>\n              <input type=\"text\" class=\"form-control\" id=\"link\"\n              v-model=\"currentPost.Link\"\n              />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"Image\">Image Link</label>\n              <input type=\"text\" class=\"form-control\" id=\"Image\"\n              v-model=\"currentPost.Image\"\n              />\n          </div>\n          <img :src=\"currentPost.Image\">\n\n      </form>\n\n      <button type = \"submit\" class=\"badge badge-success\"\n      @click=\"deletePost\"\n      >\n      Delete\n      </button>\n\n      <button type=\"submit\" class=\"badge badge-success\"\n      @click=\"updatePost\"\n      >\n      Update\n      </button>\n      <p>{{ message }}</p>\n  </div>\n\n  <div v-else>\n      <br />\n      <p>Please click on a Post...</p>\n  </div>\n</template>\n\n<script>\nimport PostDataService from \"../services/PostDataService\";\n\nexport default {\n    name: \"posts\",\n    data() {\n        return {\n            currentPost: null,\n            message: ''\n        };\n    },\n    methods: {\n        getPost(id) {\n            PostDataService.get(id)\n            .then(response => {\n                this.currentPost = response.data;\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        },\n\n        updatePost() {\n            PostDataService.update(this.currentPost.id, this.currentPost)\n            .then(response => {\n                console.log(response.data);\n                this.message = 'The post was updated successfully!';\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        },\n        deletePost() {\n            PostDataService.delete(this.currentPost.id)\n            .then(response => {\n                console.log(response.data);\n                this.$router.push({ name: \"posts\" });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        }\n    },\n    mounted() {\n        this.message = '';\n        this.getPost(this.$route.params.id);\n    }\n};\n</script>\n\n<style>\n.edit-form {\n  max-width: 300px;\n  margin: auto;\n}\n</style>"],"sourceRoot":"src/components"}]}